{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsuarioService {\n  constructor(http) {\n    this.http = http;\n    this.baseEndpoint = 'http://localhost:9090/usuarios';\n    this.cabeceras = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    this.usuarioChanged = new Subject();\n  }\n  getUsuarios() {\n    //return this.http.get<Usuario[]>(this.baseEndpoint);\n    //usamos pipe\n    return this.http.get(this.baseEndpoint).pipe(map(usuarios => {\n      return usuarios;\n    }));\n  }\n  viewUsuario(id) {\n    return this.http.get(this.baseEndpoint + '/' + id);\n  }\n  createUsuario(usuario) {\n    const usuarioToSend = {\n      ...usuario\n    };\n    // Creamos nuevos objetos Tipoid y Plan solo con el campo id\n    usuarioToSend.tipoidentificacion = {\n      id: usuario.tipoidentificacion.id\n    };\n    usuarioToSend.plan = {\n      id: usuario.plan.id\n    };\n    return this.http.post(this.baseEndpoint, usuarioToSend, {\n      headers: this.cabeceras\n    });\n  }\n  editUsuario(usuario) {\n    const usuarioToSend = {\n      ...usuario\n    };\n    // Creamos nuevos objetos Tipoid y Plan solo con el campo id\n    usuarioToSend.tipoidentificacion = {\n      id: usuario.tipoidentificacion.id\n    };\n    usuarioToSend.plan = {\n      id: usuario.plan.id\n    };\n    // Nota que he eliminado el '/' y el id del usuario de la URL\n    return this.http.put(this.baseEndpoint, usuarioToSend, {\n      headers: this.cabeceras\n    });\n  }\n  deleteUsuario(id) {\n    return this.http.delete(this.baseEndpoint + '/' + id);\n  }\n}\nUsuarioService.ɵfac = function UsuarioService_Factory(t) {\n  return new (t || UsuarioService)(i0.ɵɵinject(i1.HttpClient));\n};\nUsuarioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsuarioService,\n  factory: UsuarioService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAAqBC,OAAO,QAAQ,MAAM;AAE1C,SAAQC,GAAG,QAAO,gBAAgB;;;AAQlC,OAAM,MAAOC,cAAc;EAQzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IANhB,iBAAY,GAAG,gCAAgC;IAE/C,cAAS,GAAgB,IAAIL,WAAW,CAAC;MAAC,cAAc,EAAE;IAAkB,CAAC,CAAC;IAE/E,mBAAc,GAAkB,IAAIC,OAAO,EAAQ;EAI1D;EAEOK,WAAW;IAChB;IAEA;IACA,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,IAAI,CAACC,YAAY,CAAC,CAACC,IAAI,CACrDP,GAAG,CAACQ,QAAQ,IAAG;MACb,OAAOA,QAAqB;IAC9B,CAAC,CAAC,CACH;EACH;EAEOC,WAAW,CAACC,EAAU;IAC3B,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAAU,IAAI,CAACC,YAAY,GAAG,GAAG,GAAGI,EAAE,CAAC;EAC7D;EAEOC,aAAa,CAACC,OAAgB;IACnC,MAAMC,aAAa,GAAG;MAAE,GAAGD;IAAO,CAAE;IAElC;IACFC,aAAa,CAACC,kBAAkB,GAAG;MAAEJ,EAAE,EAAEE,OAAO,CAACE,kBAAkB,CAACJ;IAAE,CAAY;IAClFG,aAAa,CAACE,IAAI,GAAG;MAAEL,EAAE,EAAEE,OAAO,CAACG,IAAI,CAACL;IAAE,CAAU;IAEpD,OAAO,IAAI,CAACP,IAAI,CAACa,IAAI,CAAU,IAAI,CAACV,YAAY,EAAEO,aAAa,EAAE;MAAEI,OAAO,EAAE,IAAI,CAACC;IAAS,CAAE,CAAC;EAE/F;EAEOC,WAAW,CAACP,OAAgB;IAEjC,MAAMC,aAAa,GAAG;MAAE,GAAGD;IAAO,CAAE;IAEpC;IACAC,aAAa,CAACC,kBAAkB,GAAG;MAAEJ,EAAE,EAAEE,OAAO,CAACE,kBAAkB,CAACJ;IAAE,CAAY;IAClFG,aAAa,CAACE,IAAI,GAAG;MAAEL,EAAE,EAAEE,OAAO,CAACG,IAAI,CAACL;IAAE,CAAU;IAEpD;IACA,OAAO,IAAI,CAACP,IAAI,CAACiB,GAAG,CAAU,IAAI,CAACd,YAAY,EAAEO,aAAa,EAAE;MAACI,OAAO,EAAE,IAAI,CAACC;IAAS,CAAC,CAAC;EAC9F;EAGSG,aAAa,CAACX,EAAU;IAC7B,OAAO,IAAI,CAACP,IAAI,CAACmB,MAAM,CAAO,IAAI,CAAChB,YAAY,GAAG,GAAG,GAAGI,EAAE,CAAC;EAC7D;;AArDWT,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAsB,SAAdtB,cAAc;EAAAuB,YAFb;AAAM","names":["HttpHeaders","Subject","map","UsuarioService","constructor","http","getUsuarios","get","baseEndpoint","pipe","usuarios","viewUsuario","id","createUsuario","usuario","usuarioToSend","tipoidentificacion","plan","post","headers","cabeceras","editUsuario","put","deleteUsuario","delete","factory","providedIn"],"sourceRoot":"","sources":["D:\\Proyectos\\TestColmedicas\\Angular\\testColmedicas\\src\\app\\services\\usuario.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { Usuario } from '../models/usuario';\nimport {map} from 'rxjs/operators';\nimport { Plan } from '../models/plan';\nimport { Tipoid } from '../models/tipoid';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n  private baseEndpoint = 'http://localhost:9090/usuarios';\n\n  private cabeceras: HttpHeaders = new HttpHeaders({'Content-Type': 'application/json'});\n\n  public usuarioChanged: Subject<void> = new Subject<void>();\n\n  constructor(private http: HttpClient ) {\n\n  }\n\n  public getUsuarios(): Observable<Usuario[]> {\n    //return this.http.get<Usuario[]>(this.baseEndpoint);\n\n    //usamos pipe\n    return this.http.get<Usuario[]>(this.baseEndpoint).pipe(\n      map(usuarios => {\n        return usuarios as Usuario[]\n      })\n    );\n  }\n\n  public viewUsuario(id: number): Observable<Usuario>{\n    return this.http.get<Usuario>(this.baseEndpoint + '/' + id);\n  }\n\n  public createUsuario(usuario: Usuario): Observable<Usuario>{\n    const usuarioToSend = { ...usuario };\n\n      // Creamos nuevos objetos Tipoid y Plan solo con el campo id\n    usuarioToSend.tipoidentificacion = { id: usuario.tipoidentificacion.id } as Tipoid;\n    usuarioToSend.plan = { id: usuario.plan.id } as Plan;\n\n    return this.http.post<Usuario>(this.baseEndpoint, usuarioToSend, { headers: this.cabeceras });\n\n  }\n\n  public editUsuario(usuario: Usuario): Observable<Usuario>{\n\n    const usuarioToSend = { ...usuario };\n\n    // Creamos nuevos objetos Tipoid y Plan solo con el campo id\n    usuarioToSend.tipoidentificacion = { id: usuario.tipoidentificacion.id } as Tipoid;\n    usuarioToSend.plan = { id: usuario.plan.id } as Plan;\n\n    // Nota que he eliminado el '/' y el id del usuario de la URL\n    return this.http.put<Usuario>(this.baseEndpoint, usuarioToSend, {headers: this.cabeceras});\n}\n\n\n  public deleteUsuario(id: number): Observable<void>{\n    return this.http.delete<void>(this.baseEndpoint + '/' + id);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}